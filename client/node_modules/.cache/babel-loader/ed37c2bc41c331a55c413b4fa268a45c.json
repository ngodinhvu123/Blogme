{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai_lieu_hoc_vu\\\\blog_me\\\\client\\\\src\\\\Compoment\\\\Post\\\\Post.jsx\";\nimport React, { Component } from 'react';\nimport 'quill/dist/quill';\nimport { Card, Button, Col, Alert, Row, Form, ListGroup } from 'react-bootstrap';\nimport ReactQuill, { Quill } from 'react-quill';\nimport ImageUpload from 'quill-image-uploader';\nimport 'react-quill/dist/quill.snow.css';\nimport ImageResize from 'quill-image-resize';\nimport axios from 'axios';\nimport { withFormik } from 'formik';\nimport cookie from 'universal-cookie';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport FormData from 'form-data';\nimport Selector from 'react-select/async';\nconst Cookie = new cookie();\nQuill.register('modules/imageUpload', ImageUpload);\nQuill.register('modules/imageResize', ImageResize);\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      if (selectedOption.length > 2) {\n        axios.get('/post/findtag', {\n          params: {\n            query: selectedOption\n          }\n        }).then(x => this.setState({\n          tag: x.data\n        }));\n      }\n\n      return selectedOption;\n    };\n\n    this.updateContent = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.updateContent = this.updateContent.bind(this);\n    this.pushpost = this.pushpost.bind(this);\n    this.state = {\n      title: '',\n      content: '',\n      sub_title: '',\n      tag: []\n    };\n  }\n\n  async pushpost() {\n    if (Object.keys(this.props.errors).length <= 0) {\n      await axios({\n        method: 'POST',\n        url: '/post/postnews',\n        data: {\n          title: this.props.values.title,\n          sub_title: this.state.sub_title,\n          content: this.state.content,\n          token: Cookie.get('token')\n        }\n      }).then(x => {\n        if (x.data.statuscode === 200) {\n          this.props.history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          res: true,\n          desc: 'Có lỗi xảy ra'\n        });\n      });\n    }\n  }\n\n  show(a) {\n    this.setState({ ...this.state,\n      res: a\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    const {\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, this.state.res === true && /*#__PURE__*/React.createElement(Alert, {\n      className: \"position-relative text-center\",\n      style: {\n        width: '100%',\n        zIndex: 10\n      },\n      onClose: () => this.show(false),\n      variant: \"danger\",\n      dismissible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, this.state.desc), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: handleChange,\n      onBlur: handleBlur,\n      name: \"title\",\n      type: \"text\",\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), this.props.touched.title && /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"h6\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 54\n      }\n    }, \" \", this.props.errors.title), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-3 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 11,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      onInputChange: this.handleChange,\n      options: [{\n        value: 'chocolate',\n        label: 'Chocolate'\n      }, {\n        value: 'strawberry',\n        label: 'Strawberry'\n      }, {\n        value: 'vanilla',\n        label: 'Vanilla'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 1,\n      className: \"p-0 pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.pushpost,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"\\u0110\\u0103ng b\\xE0i\")))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReactQuill, {\n      value: this.state.content,\n      onChange: this.updateContent,\n      modules: ReactQuill.modules,\n      formats: ReactQuill.formats,\n      placeholder: 'Nhập nội dung bài viết ở đây',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nReactQuill.modules = {\n  toolbar: [[{\n    'header': '1'\n  }, {\n    'header': '2'\n  }, {\n    'font': []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'blockquote', 'code-block'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image', 'video']],\n  imageResize: {\n    parchment: Quill.import('parchment') // See optional \"config\" below\n\n  },\n  imageUpload: {\n    upload: file => {\n      // return a Promise that resolves in a link to the uploaded image\n      return new Promise((resolve, reject) => {\n        let formData = new FormData();\n        formData.append('image', file);\n        axios({\n          url: '/post/image',\n          method: 'POST',\n          data: formData\n        }).then(x => {\n          resolve(x.data.fileUrl);\n        });\n      });\n    }\n  },\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n/* \r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\n\nReactQuill.formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n/* \r\n * PropType validation\r\n */\n\nconst FormFormik = withFormik({\n  mapPropsToValues: () => ({\n    title: '',\n    tag: ''\n  }),\n  validationSchema: props => {\n    return Yup.object().shape({\n      title: Yup.string().required(\"Vui lòng điền Title vào\").min(5, \"Title ít nhất 5 kí tự\")\n    });\n  }\n})(Post);\nexport default withRouter(FormFormik);","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/src/Compoment/Post/Post.jsx"],"names":["React","Component","Card","Button","Col","Alert","Row","Form","ListGroup","ReactQuill","Quill","ImageUpload","ImageResize","axios","withFormik","cookie","withRouter","Yup","FormData","Selector","Cookie","register","Post","constructor","props","handleChange","selectedOption","length","get","params","query","then","x","setState","tag","data","updateContent","value","content","bind","pushpost","state","title","sub_title","Object","keys","errors","method","url","values","token","statuscode","history","push","catch","err","console","log","res","desc","show","a","render","handleBlur","handleSubmit","width","zIndex","touched","color","label","modules","formats","toolbar","size","imageResize","parchment","import","imageUpload","upload","file","Promise","resolve","reject","formData","append","fileUrl","clipboard","matchVisual","FormFormik","mapPropsToValues","validationSchema","object","shape","string","required","min"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'quill/dist/quill'\r\nimport { Card, Button, Col, Alert, Row, Form, ListGroup } from 'react-bootstrap';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport ImageUpload from 'quill-image-uploader';\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport ImageResize from 'quill-image-resize'\r\nimport axios from 'axios';\r\nimport { withFormik } from 'formik';\r\nimport cookie from 'universal-cookie';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport FormData from 'form-data'\r\nimport Selector from 'react-select/async';\r\n\r\nconst Cookie = new cookie();\r\nQuill.register('modules/imageUpload', ImageUpload);\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateContent = this.updateContent.bind(this);\r\n        this.pushpost = this.pushpost.bind(this);\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            sub_title: '',\r\n            tag: []\r\n        }\r\n    }\r\n    async pushpost() {\r\n        if (Object.keys(this.props.errors).length <= 0) {\r\n            await axios({\r\n                method: 'POST',\r\n                url: '/post/postnews',\r\n                data: {\r\n                    title: this.props.values.title,\r\n                    sub_title: this.state.sub_title,\r\n                    content: this.state.content,\r\n                    token: Cookie.get('token')\r\n                }\r\n            }).then(x => {\r\n                if (x.data.statuscode === 200) {\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({ res: true, desc: 'Có lỗi xảy ra' })\r\n                })\r\n        }\r\n\r\n    }\r\n    handleChange = selectedOption => {\r\n        if (selectedOption.length > 2) {\r\n            axios.get('/post/findtag', { params: { query: selectedOption } }).then(x => this.setState({ tag: x.data }))\r\n        }\r\n        return selectedOption;\r\n    };\r\n    updateContent = (value) => {\r\n        this.setState({ content: value });\r\n    }\r\n\r\n    show(a) {\r\n        this.setState({ ...this.state, res: a })\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        const {\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n        } = this.props;\r\n        return (\r\n            <Form>\r\n                {this.state.res === true &&\r\n                    <Alert className=\"position-relative text-center\"\r\n                        style={{ width: '100%', zIndex: 10 }} onClose={() => this.show(false)} variant=\"danger\" dismissible >{this.state.desc}</Alert>}\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Form.Control onChange={handleChange} onBlur={handleBlur} name='title' type=\"text\" placeholder=\"Title\" />\r\n                        {this.props.touched.title && <Form.Text className=\"h6\" style={{ color: 'red' }}> {this.props.errors.title}</Form.Text>}\r\n                        <Row className='mt-3 m-0'>\r\n                            <Col xs={11} className='p-0'>\r\n                                <Selector onInputChange={this.handleChange}\r\n                                    options={[\r\n                                        { value: 'chocolate', label: 'Chocolate' },\r\n                                        { value: 'strawberry', label: 'Strawberry' },\r\n                                        { value: 'vanilla', label: 'Vanilla' }\r\n                                      ]}\r\n                                ></Selector>\r\n                            </Col>\r\n                            <Col xs={1} className='p-0 pl-2'>\r\n                                <Button onClick={this.pushpost} variant=\"primary\">Đăng bài</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className='h-100'>\r\n                        <ReactQuill value={this.state.content}\r\n                            onChange={this.updateContent}\r\n                            modules={ReactQuill.modules}\r\n                            formats={ReactQuill.formats}\r\n                            placeholder={'Nhập nội dung bài viết ở đây'} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Form >\r\n        );\r\n    }\r\n}\r\nReactQuill.modules = {\r\n    toolbar: [\r\n        [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n        [{ size: [] }],\r\n        ['bold', 'italic', 'underline', 'blockquote', 'code-block'],\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n        { 'indent': '-1' }, { 'indent': '+1' }],\r\n        ['link', 'image', 'video'],\r\n    ],\r\n    imageResize: {\r\n        parchment: Quill.import('parchment')\r\n        // See optional \"config\" below\r\n    },\r\n    imageUpload: {\r\n        upload: file => {\r\n            // return a Promise that resolves in a link to the uploaded image\r\n            return new Promise((resolve, reject) => {\r\n                let formData = new FormData()\r\n                formData.append('image', file)\r\n                axios({ url: '/post/image', method: 'POST', data: formData }).then(x => {\r\n                    resolve(x.data.fileUrl)\r\n                })\r\n\r\n            });\r\n        }\r\n    },\r\n    clipboard: {\r\n        // toggle to add extra line breaks when pasting HTML:\r\n        matchVisual: false,\r\n    }\r\n}\r\n/* \r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nReactQuill.formats = [\r\n    'header', 'font', 'size',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image', 'video'\r\n]\r\n\r\n/* \r\n * PropType validation\r\n */\r\nconst FormFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        title: '',\r\n        tag: '',\r\n    }),\r\n    validationSchema: (props) => {\r\n        return Yup.object().shape({\r\n            title: Yup.string().required(\"Vui lòng điền Title vào\").min(5, \"Title ít nhất 5 kí tự\"),\r\n        })\r\n    }\r\n})(Post)\r\nexport default withRouter(FormFormik);"]},"metadata":{},"sourceType":"module"}