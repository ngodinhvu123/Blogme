{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai_lieu_hoc_vu\\\\blog_me\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n};\n\nconst count = (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n      break;\n\n    case 'DECREMENT':\n      return state - 1;\n      break;\n  }\n};\n\nlet store = createStore(count);\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","increment","type","decrement","count","state","action","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,QAA0B,OAA1B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAID,CALD;;AAOA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAID,CALD;;AAOA,MAAME,KAAK,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACnC,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,WAAL;AACE,aAAOG,KAAK,GAAG,CAAf;AACA;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;AACA;AANJ;AAQD,CATD;;AAUA,IAAIE,KAAK,GAAEP,WAAW,CAACI,KAAD,CAAtB;AACAP,QAAQ,CAACW,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHF,E,CAMA;AACA;AACA;;AACAX,aAAa,CAACY,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT',\n\n  }\n}\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT',\n\n  }\n}\n\nconst count = (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n      break;\n    case 'DECREMENT':\n      return state - 1;\n      break;\n  }\n}\nlet store= createStore(count);\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}