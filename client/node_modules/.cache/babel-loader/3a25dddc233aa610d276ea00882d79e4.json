{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/ui/utils\n */\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport { getSelectedImageWidget } from '../utils';\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport function repositionContextualBalloon(editor) {\n  const balloon = editor.plugins.get('ContextualBalloon');\n\n  if (getSelectedImageWidget(editor.editing.view.document.selection)) {\n    const position = getBalloonPositionData(editor);\n    balloon.updatePosition(position);\n  }\n}\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\n\nexport function getBalloonPositionData(editor) {\n  const editingView = editor.editing.view;\n  const defaultPositions = BalloonPanelView.defaultPositions;\n  return {\n    target: editingView.domConverter.viewToDom(editingView.document.selection.getSelectedElement()),\n    positions: [defaultPositions.northArrowSouth, defaultPositions.northArrowSouthWest, defaultPositions.northArrowSouthEast, defaultPositions.southArrowNorth, defaultPositions.southArrowNorthWest, defaultPositions.southArrowNorthEast]\n  };\n}","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/node_modules/@ckeditor/ckeditor5-image/src/image/ui/utils.js"],"names":["BalloonPanelView","getSelectedImageWidget","repositionContextualBalloon","editor","balloon","plugins","get","editing","view","document","selection","position","getBalloonPositionData","updatePosition","editingView","defaultPositions","target","domConverter","viewToDom","getSelectedElement","positions","northArrowSouth","northArrowSouthWest","northArrowSouthEast","southArrowNorth","southArrowNorthWest","southArrowNorthEast"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,gBAAP,MAA6B,2DAA7B;AACA,SAASC,sBAAT,QAAuC,UAAvC;AAEA;;;;;;;;AAOA,OAAO,SAASC,2BAAT,CAAsCC,MAAtC,EAA+C;AACrD,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoB,mBAApB,CAAhB;;AAEA,MAAKL,sBAAsB,CAAEE,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,QAApB,CAA6BC,SAA/B,CAA3B,EAAwE;AACvE,UAAMC,QAAQ,GAAGC,sBAAsB,CAAET,MAAF,CAAvC;AAEAC,IAAAA,OAAO,CAACS,cAAR,CAAwBF,QAAxB;AACA;AACD;AAED;;;;;;;;;AAQA,OAAO,SAASC,sBAAT,CAAiCT,MAAjC,EAA0C;AAChD,QAAMW,WAAW,GAAGX,MAAM,CAACI,OAAP,CAAeC,IAAnC;AACA,QAAMO,gBAAgB,GAAGf,gBAAgB,CAACe,gBAA1C;AAEA,SAAO;AACNC,IAAAA,MAAM,EAAEF,WAAW,CAACG,YAAZ,CAAyBC,SAAzB,CAAoCJ,WAAW,CAACL,QAAZ,CAAqBC,SAArB,CAA+BS,kBAA/B,EAApC,CADF;AAENC,IAAAA,SAAS,EAAE,CACVL,gBAAgB,CAACM,eADP,EAEVN,gBAAgB,CAACO,mBAFP,EAGVP,gBAAgB,CAACQ,mBAHP,EAIVR,gBAAgB,CAACS,eAJP,EAKVT,gBAAgB,CAACU,mBALP,EAMVV,gBAAgB,CAACW,mBANP;AAFL,GAAP;AAWA","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/ui/utils\n */\n\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport { getSelectedImageWidget } from '../utils';\n\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport function repositionContextualBalloon( editor ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\n\tif ( getSelectedImageWidget( editor.editing.view.document.selection ) ) {\n\t\tconst position = getBalloonPositionData( editor );\n\n\t\tballoon.updatePosition( position );\n\t}\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonPositionData( editor ) {\n\tconst editingView = editor.editing.view;\n\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\n\treturn {\n\t\ttarget: editingView.domConverter.viewToDom( editingView.document.selection.getSelectedElement() ),\n\t\tpositions: [\n\t\t\tdefaultPositions.northArrowSouth,\n\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\tdefaultPositions.southArrowNorth,\n\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\tdefaultPositions.southArrowNorthEast\n\t\t]\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}