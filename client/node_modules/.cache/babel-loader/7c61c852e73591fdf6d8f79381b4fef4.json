{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai_lieu_hoc_vu\\\\blog_me\\\\client\\\\src\\\\Compoment\\\\Post\\\\AreText.jsx\";\nimport React, { Component } from 'react';\nimport CKEditor from '@ckeditor/ckeditor5-react'; // NOTE: Use the editor from source (not a build)!\n\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nconst editorConfiguration = {\n  plugins: [Essentials, Bold, Italic, Paragraph],\n  toolbar: ['bold', 'italic']\n};\n\nclass AreText extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(CKEditor, {\n      editor: ClassicEditor,\n      config: editorConfiguration,\n      data: \"<p>Hello from CKEditor 5!</p>\",\n      onInit: editor => {\n        // You can store the \"editor\" and use when it is needed.\n        console.log('Editor is ready to use!', editor);\n      },\n      onChange: (event, editor) => {\n        const data = editor.getData();\n        console.log({\n          event,\n          editor,\n          data\n        });\n      },\n      onBlur: (event, editor) => {\n        console.log('Blur.', editor);\n      },\n      onFocus: (event, editor) => {\n        console.log('Focus.', editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default AreText;","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/src/Compoment/Post/AreText.jsx"],"names":["React","Component","CKEditor","ClassicEditor","Essentials","Bold","Italic","Paragraph","editorConfiguration","plugins","toolbar","AreText","render","editor","console","log","event","data","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,IAAP,MAAiB,2CAAjB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AAEA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,EAAE,CAACL,UAAD,EAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,SAA3B,CADe;AAExBG,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT;AAFe,CAA5B;;AAMA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC5BW,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,QAAD;AACI,MAAA,MAAM,EAAET,aADZ;AAEI,MAAA,MAAM,EAAEK,mBAFZ;AAGI,MAAA,IAAI,EAAC,+BAHT;AAII,MAAA,MAAM,EAAEK,MAAM,IAAI;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,MAAvC;AACH,OAPL;AAQI,MAAA,QAAQ,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AACzB,cAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAP,EAAb;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,UAAAA,KAAF;AAASH,UAAAA,MAAT;AAAiBI,UAAAA;AAAjB,SAAZ;AACH,OAXL;AAYI,MAAA,MAAM,EAAE,CAACD,KAAD,EAAQH,MAAR,KAAmB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACH,OAdL;AAeI,MAAA,OAAO,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACH,OAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAqBH;;AAvB2B;;AA0BhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\n\r\n// NOTE: Use the editor from source (not a build)!\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\r\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\r\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\r\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\r\n\r\nconst editorConfiguration = {\r\n    plugins: [Essentials, Bold, Italic, Paragraph],\r\n    toolbar: ['bold', 'italic']\r\n};\r\n\r\n\r\nclass AreText extends Component {\r\n    render() {\r\n        return (\r\n            <CKEditor\r\n                editor={ClassicEditor}\r\n                config={editorConfiguration}\r\n                data=\"<p>Hello from CKEditor 5!</p>\"\r\n                onInit={editor => {\r\n                    // You can store the \"editor\" and use when it is needed.\r\n                    console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    console.log({ event, editor, data });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                    console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                    console.log('Focus.', editor);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AreText;"]},"metadata":{},"sourceType":"module"}