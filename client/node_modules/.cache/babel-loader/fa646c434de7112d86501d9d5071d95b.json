{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai_lieu_hoc_vu\\\\blog_me\\\\client\\\\src\\\\Compoment\\\\Post\\\\TextAre.jsx\";\nimport React, { Component } from 'react';\nimport RichTextEditor from 'react-rte';\n\nclass TextAre extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = value => {\n      this.setState({\n        value\n      });\n\n      if (this.props.onChange) {\n        // Send the changes up to the parent component as an HTML string.\n        // This is here to demonstrate using `.toString()` but in a real app it\n        // would be better to avoid generating a string on each change.\n        this.props.onChange(value.toString('html'));\n      }\n    };\n\n    this.state = {\n      value: RichTextEditor.createEmptyValue()\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(RichTextEditor, {\n      value: this.state.value,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default TextAre;","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/src/Compoment/Post/TextAre.jsx"],"names":["React","Component","RichTextEditor","TextAre","constructor","props","onChange","value","setState","toString","state","createEmptyValue","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,WAA3B;;AACA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,QAJmB,GAIPC,KAAD,IAAW;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;;AACA,UAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA;AACA;AACA,aAAKD,KAAL,CAAWC,QAAX,CACEC,KAAK,CAACE,QAAN,CAAe,MAAf,CADF;AAGD;AACF,KAdgB;;AAEf,SAAKC,KAAL,GAAW;AAACH,MAAAA,KAAK,EAAEL,cAAc,CAACS,gBAAf;AAAR,KAAX;AACH;;AAYDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,wBACI,oBAAC,cAAD;AAAiB,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWH,KAAnC;AACA,MAAA,QAAQ,EAAE,KAAKD,QADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AAtB2B;;AAyBhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport RichTextEditor from 'react-rte';\r\nclass TextAre extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={value: RichTextEditor.createEmptyValue()}\r\n    }\r\n    onChange = (value) => {\r\n        this.setState({value});\r\n        if (this.props.onChange) {\r\n          // Send the changes up to the parent component as an HTML string.\r\n          // This is here to demonstrate using `.toString()` but in a real app it\r\n          // would be better to avoid generating a string on each change.\r\n          this.props.onChange(\r\n            value.toString('html')\r\n          );\r\n        }\r\n      };\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <RichTextEditor  value={this.state.value}\r\n            onChange={this.onChange}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextAre;"]},"metadata":{},"sourceType":"module"}