{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml(text) {\n  text = text // Encode <>.\n  .replace(/</g, '&lt;').replace(/>/g, '&gt;') // Creates paragraphs for every line breaks.\n  .replace(/\\n/g, '</p><p>') // Preserve trailing spaces (only the first and last one – the rest is handled below).\n  .replace(/^\\s/, '&nbsp;').replace(/\\s$/, '&nbsp;') // Preserve other subsequent spaces now.\n  .replace(/\\s\\s/g, ' &nbsp;');\n\n  if (text.indexOf('</p><p>') > -1) {\n    // If we created paragraphs above, add the trailing ones.\n    text = `<p>${text}</p>`;\n  } // TODO:\n  // * What about '\\nfoo' vs ' foo'?\n\n\n  return text;\n}","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js"],"names":["plainTextToHtml","text","replace","indexOf"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;;;;;;AAMA,eAAe,SAASA,eAAT,CAA0BC,IAA1B,EAAiC;AAC/CA,EAAAA,IAAI,GAAGA,IAAI,CACV;AADU,GAETC,OAFK,CAEI,IAFJ,EAEU,MAFV,EAGLA,OAHK,CAGI,IAHJ,EAGU,MAHV,EAIN;AAJM,GAKLA,OALK,CAKI,KALJ,EAKW,SALX,EAMN;AANM,GAOLA,OAPK,CAOI,KAPJ,EAOW,QAPX,EAQLA,OARK,CAQI,KARJ,EAQW,QARX,EASN;AATM,GAULA,OAVK,CAUI,OAVJ,EAUa,SAVb,CAAP;;AAYA,MAAKD,IAAI,CAACE,OAAL,CAAc,SAAd,IAA4B,CAAC,CAAlC,EAAsC;AACrC;AACAF,IAAAA,IAAI,GAAI,MAAMA,IAAM,MAApB;AACA,GAhB8C,CAkB/C;AACA;;;AAEA,SAAOA,IAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml( text ) {\n\ttext = text\n\t\t// Encode <>.\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t// Creates paragraphs for every line breaks.\n\t\t.replace( /\\n/g, '</p><p>' )\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t\t.replace( /^\\s/, '&nbsp;' )\n\t\t.replace( /\\s$/, '&nbsp;' )\n\t\t// Preserve other subsequent spaces now.\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\n\n\tif ( text.indexOf( '</p><p>' ) > -1 ) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = `<p>${ text }</p>`;\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n"]},"metadata":{},"sourceType":"module"}