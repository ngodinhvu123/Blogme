{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageloadobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\n/**\n * Observes all new images added to the {@link module:engine/view/document~Document},\n * fires {@link module:engine/view/document~Document#event:imageLoaded} and\n * {@link module:engine/view/document~Document#event:layoutChanged} event every time when the new image\n * has been loaded.\n *\n * **Note:** This event is not fired for images that has been added to the document and rendered as `complete` (already loaded).\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nexport default class ImageLoadObserver extends Observer {\n  /**\n   * @inheritDoc\n   */\n  observe(domRoot) {\n    this.listenTo(domRoot, 'load', (event, domEvent) => {\n      const domElement = domEvent.target;\n\n      if (domElement.tagName == 'IMG') {\n        this._fireEvents(domEvent);\n      } // Use capture phase for better performance (#4504).\n\n    }, {\n      useCapture: true\n    });\n  }\n  /**\n   * Fires {@link module:engine/view/document~Document#event:layoutChanged} and\n   * {@link module:engine/view/document~Document#event:imageLoaded}\n   * if observer {@link #isEnabled is enabled}.\n   *\n   * @protected\n   * @param {Event} domEvent The DOM event.\n   */\n\n\n  _fireEvents(domEvent) {\n    if (this.isEnabled) {\n      this.document.fire('layoutChanged');\n      this.document.fire('imageLoaded', domEvent);\n    }\n  }\n\n}\n/**\n * Fired when an <img/> DOM element has been loaded in the DOM root.\n *\n * Introduced by {@link module:image/image/imageloadobserver~ImageLoadObserver}.\n *\n * @see module:image/image/imageloadobserver~ImageLoadObserver\n * @event module:engine/view/document~Document#event:imageLoaded\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/node_modules/@ckeditor/ckeditor5-image/src/image/imageloadobserver.js"],"names":["Observer","ImageLoadObserver","observe","domRoot","listenTo","event","domEvent","domElement","target","tagName","_fireEvents","useCapture","isEnabled","document","fire"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,QAAP,MAAqB,uDAArB;AAEA;;;;;;;;;;;AAUA,eAAe,MAAMC,iBAAN,SAAgCD,QAAhC,CAAyC;AACvD;;;AAGAE,EAAAA,OAAO,CAAEC,OAAF,EAAY;AAClB,SAAKC,QAAL,CAAeD,OAAf,EAAwB,MAAxB,EAAgC,CAAEE,KAAF,EAASC,QAAT,KAAuB;AACtD,YAAMC,UAAU,GAAGD,QAAQ,CAACE,MAA5B;;AAEA,UAAKD,UAAU,CAACE,OAAX,IAAsB,KAA3B,EAAmC;AAClC,aAAKC,WAAL,CAAkBJ,QAAlB;AACA,OALqD,CAMtD;;AACA,KAPD,EAOG;AAAEK,MAAAA,UAAU,EAAE;AAAd,KAPH;AAQA;AAED;;;;;;;;;;AAQAD,EAAAA,WAAW,CAAEJ,QAAF,EAAa;AACvB,QAAK,KAAKM,SAAV,EAAsB;AACrB,WAAKC,QAAL,CAAcC,IAAd,CAAoB,eAApB;AACA,WAAKD,QAAL,CAAcC,IAAd,CAAoB,aAApB,EAAmCR,QAAnC;AACA;AACD;;AA5BsD;AA+BxD","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageloadobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\n\n/**\n * Observes all new images added to the {@link module:engine/view/document~Document},\n * fires {@link module:engine/view/document~Document#event:imageLoaded} and\n * {@link module:engine/view/document~Document#event:layoutChanged} event every time when the new image\n * has been loaded.\n *\n * **Note:** This event is not fired for images that has been added to the document and rendered as `complete` (already loaded).\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ImageLoadObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domRoot ) {\n\t\tthis.listenTo( domRoot, 'load', ( event, domEvent ) => {\n\t\t\tconst domElement = domEvent.target;\n\n\t\t\tif ( domElement.tagName == 'IMG' ) {\n\t\t\t\tthis._fireEvents( domEvent );\n\t\t\t}\n\t\t\t// Use capture phase for better performance (#4504).\n\t\t}, { useCapture: true } );\n\t}\n\n\t/**\n\t * Fires {@link module:engine/view/document~Document#event:layoutChanged} and\n\t * {@link module:engine/view/document~Document#event:imageLoaded}\n\t * if observer {@link #isEnabled is enabled}.\n\t *\n\t * @protected\n\t * @param {Event} domEvent The DOM event.\n\t */\n\t_fireEvents( domEvent ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( 'layoutChanged' );\n\t\t\tthis.document.fire( 'imageLoaded', domEvent );\n\t\t}\n\t}\n}\n\n/**\n * Fired when an <img/> DOM element has been loaded in the DOM root.\n *\n * Introduced by {@link module:image/image/imageloadobserver~ImageLoadObserver}.\n *\n * @see module:image/image/imageloadobserver~ImageLoadObserver\n * @event module:engine/view/document~Document#event:imageLoaded\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n"]},"metadata":{},"sourceType":"module"}