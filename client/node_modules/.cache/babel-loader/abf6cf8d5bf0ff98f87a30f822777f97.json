{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n;\n(function () {\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n    table: noop,\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n    text: /^[^\\n]+/\n  };\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = replace(block.item, 'gm')(/bull/g, block.bullet)();\n  block.list = replace(block.list)(/bull/g, block.bullet)('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')('def', '\\\\n+(?=' + block.def.source + ')')();\n  block.blockquote = replace(block.blockquote)('def', block.def)();\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n  block.html = replace(block.html)('comment', /<!--[\\s\\S]*?-->/)('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g, block._tag)();\n  block.paragraph = replace(block.paragraph)('hr', block.hr)('heading', block.heading)('lheading', block.lheading)('blockquote', block.blockquote)('tag', '<' + block._tag)('def', block.def)();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n  block.gfm.paragraph = replace(block.paragraph)('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|')();\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n  /**\n   * Expose Block Rules\n   */\n\n\n  Lexer.rules = block;\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n  /**\n   * Preprocessing\n   */\n\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n  /**\n   * Lexing\n   */\n\n\n  Lexer.prototype.token = function (src, top, bq) {\n    var src = src.replace(/^ +$/gm, ''),\n        next,\n        loose,\n        cap,\n        bull,\n        b,\n        item,\n        space,\n        i,\n        l;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      } // fences (gfm)\n\n\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      } // heading\n\n\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      } // table no leading pipe (gfm)\n\n\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // lheading\n\n\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      } // hr\n\n\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      } // blockquote\n\n\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n\n        this.token(cap, top, true);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      } // list\n\n\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        this.tokens.push({\n          type: 'list_start',\n          ordered: bull.length > 1\n        }); // Get each top-level item.\n\n        cap = cap[0].match(this.rules.item);\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i]; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          }); // Recurse.\n\n          this.token(item, false, bq);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      } // html\n\n\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      } // def\n\n\n      if (!bq && top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.links[cap[1].toLowerCase()] = {\n          href: cap[2],\n          title: cap[3]\n        };\n        continue;\n      } // table (gfm)\n\n\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // top-level paragraph\n\n\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n  /**\n   * Inline-Level Grammar\n   */\n\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n  };\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n  inline.link = replace(inline.link)('inside', inline._inside)('href', inline._href)();\n  inline.reflink = replace(inline.reflink)('inside', inline._inside)();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: replace(inline.escape)('])', '~|])')(),\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: replace(inline.text)(']|', '~]|')('|', '|https?://|')()\n  });\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: replace(inline.br)('{2,}', '*')(),\n    text: replace(inline.gfm.text)('{2,}', '*')()\n  });\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n  /**\n   * Expose Inline Rules\n   */\n\n\n  InlineLexer.rules = inline;\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n  /**\n   * Lexing/Compiling\n   */\n\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      } // autolink\n\n\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[2] === '@') {\n          text = cap[1].charAt(6) === ':' ? this.mangle(cap[1].substring(7)) : this.mangle(cap[1]);\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // url (gfm)\n\n\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        src = src.substring(cap[0].length);\n        text = escape(cap[1]);\n        href = text;\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // tag\n\n\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      } // link\n\n\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      } // reflink, nolink\n\n\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      } // strong\n\n\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      } // em\n\n\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2], true));\n        continue;\n      } // br\n\n\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      } // del (gfm)\n\n\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n  /**\n   * Compile Link\n   */\n\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n        title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n  /**\n   * Smartypants Transformations\n   */\n\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text // em-dashes\n    .replace(/---/g, '\\u2014') // en-dashes\n    .replace(/--/g, '\\u2013') // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018') // closing singles & apostrophes\n    .replace(/'/g, '\\u2019') // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c') // closing doubles\n    .replace(/\"/g, '\\u201d') // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n  };\n  /**\n   * Mangle Links\n   */\n\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n  /**\n   * Renderer\n   */\n\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '\\n</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '\\n</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-') + '\">' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + '<tbody>\\n' + body + '</tbody>\\n' + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }; // span level renderer\n\n\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return '';\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n        return '';\n      }\n    }\n\n    var out = '<a href=\"' + href + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n  /**\n   * Parsing & Compiling\n   */\n\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n  /**\n   * Static Parse Method\n   */\n\n\n  Parser.parse = function (src, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(src);\n  };\n  /**\n   * Parse Loop\n   */\n\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\n    this.tokens = src.reverse();\n    var out = '';\n\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n  /**\n   * Next Token\n   */\n\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n  /**\n   * Preview Next Token\n   */\n\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n  /**\n   * Parse Text Tokens\n   */\n\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n  /**\n   * Parse Current Token\n   */\n\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, this.token.text);\n        }\n\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              flags,\n              j; // header\n\n          cell = '';\n\n          for (i = 0; i < this.token.header.length; i++) {\n            flags = {\n              header: true,\n              align: this.token.align[i]\n            };\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n\n          return this.renderer.table(header, body);\n        }\n\n      case 'blockquote_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n\n      case 'list_start':\n        {\n          var body = '',\n              ordered = this.token.ordered;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered);\n        }\n\n      case 'list_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'loose_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n  /**\n   * Helpers\n   */\n\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  function replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n      if (!name) return new RegExp(regex, opt);\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  function noop() {}\n\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function (err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occured:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer(),\n    xhtml: false\n  };\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.parse = marked;\n\n  if (typeof module !== 'undefined' && typeof exports === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    this.marked = marked;\n  }\n}).call(function () {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/marked.js"],"names":["block","newline","code","fences","noop","hr","heading","nptable","lheading","blockquote","list","html","def","table","paragraph","text","bullet","item","replace","source","_tag","normal","merge","gfm","tables","Lexer","options","tokens","links","marked","defaults","rules","lex","src","lexer","prototype","token","top","bq","next","loose","cap","bull","b","space","i","l","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","breaks","InlineLexer","renderer","Renderer","output","out","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","unescape","e","Parser","parse","parser","reverse","tok","pop","peek","parseText","row","cell","j","encode","_","n","String","fromCharCode","parseInt","regex","opt","self","name","val","obj","target","key","arguments","Object","hasOwnProperty","call","callback","pending","done","err","message","silent","setOptions","inlineLexer","module","exports","define","amd","window","global"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || { };\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n"]},"metadata":{},"sourceType":"script"}