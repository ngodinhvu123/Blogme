{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from './utils';\n/**\n * @module image/image/imageinsertcommand\n */\n\n/**\n * Insert image command.\n *\n * The command is registered by the {@link module:image/image/imageediting~ImageEditing} plugin as `'imageInsert'`.\n *\n * In order to insert an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and specify the image source:\n *\n *\t\teditor.execute( 'imageInsert', { source: 'http://url.to.the/image' } );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageInsert', {\n *\t\t\tsource:  [\n *\t\t\t\t'path/to/image.jpg',\n *\t\t\t\t'path/to/other-image.jpg'\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\n\nexport default class ImageInsertCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.isEnabled = isImageAllowed(this.editor.model);\n  }\n  /**\n   * Executes the command.\n   *\n   * @fires execute\n   * @param {Object} options Options for the executed command.\n   * @param {String|Array.<String>} options.source The image source or an array of image sources to insert.\n   */\n\n\n  execute(options) {\n    const model = this.editor.model;\n    model.change(writer => {\n      const sources = Array.isArray(options.source) ? options.source : [options.source];\n\n      for (const src of sources) {\n        insertImage(writer, model, {\n          src\n        });\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/node_modules/@ckeditor/ckeditor5-image/src/image/imageinsertcommand.js"],"names":["Command","insertImage","isImageAllowed","ImageInsertCommand","refresh","isEnabled","editor","model","execute","options","change","writer","sources","Array","isArray","source","src"],"mappings":"AAAA;;;;AAKA,OAAOA,OAAP,MAAoB,sCAApB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,SAA5C;AAEA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,eAAe,MAAMC,kBAAN,SAAiCH,OAAjC,CAAyC;AACvD;;;AAGAI,EAAAA,OAAO,GAAG;AACT,SAAKC,SAAL,GAAiBH,cAAc,CAAE,KAAKI,MAAL,CAAYC,KAAd,CAA/B;AACA;AAED;;;;;;;;;AAOAC,EAAAA,OAAO,CAAEC,OAAF,EAAY;AAClB,UAAMF,KAAK,GAAG,KAAKD,MAAL,CAAYC,KAA1B;AAEAA,IAAAA,KAAK,CAACG,MAAN,CAAcC,MAAM,IAAI;AACvB,YAAMC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAeL,OAAO,CAACM,MAAvB,IAAkCN,OAAO,CAACM,MAA1C,GAAmD,CAAEN,OAAO,CAACM,MAAV,CAAnE;;AAEA,WAAM,MAAMC,GAAZ,IAAmBJ,OAAnB,EAA6B;AAC5BX,QAAAA,WAAW,CAAEU,MAAF,EAAUJ,KAAV,EAAiB;AAAES,UAAAA;AAAF,SAAjB,CAAX;AACA;AACD,KAND;AAOA;;AAzBsD","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from './utils';\n\n/**\n * @module image/image/imageinsertcommand\n */\n\n/**\n * Insert image command.\n *\n * The command is registered by the {@link module:image/image/imageediting~ImageEditing} plugin as `'imageInsert'`.\n *\n * In order to insert an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and specify the image source:\n *\n *\t\teditor.execute( 'imageInsert', { source: 'http://url.to.the/image' } );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageInsert', {\n *\t\t\tsource:  [\n *\t\t\t\t'path/to/image.jpg',\n *\t\t\t\t'path/to/other-image.jpg'\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\nexport default class ImageInsertCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = isImageAllowed( this.editor.model );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options Options for the executed command.\n\t * @param {String|Array.<String>} options.source The image source or an array of image sources to insert.\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst sources = Array.isArray( options.source ) ? options.source : [ options.source ];\n\n\t\t\tfor ( const src of sources ) {\n\t\t\t\tinsertImage( writer, model, { src } );\n\t\t\t}\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}