{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai_lieu_hoc_vu\\\\blog_me\\\\client\\\\src\\\\Compoment\\\\Post\\\\Post.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Button, Col, Row, Form } from 'react-bootstrap';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport GFMDataProcessor from '@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor';\n\nfunction Markdown(editor) {\n  editor.data.processor = new GFMDataProcessor(editor.editing.view.document);\n}\n\nclass Post extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"pt-3 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 11,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 1,\n      className: \"p-0 pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, \"\\u0110\\u0103ng b\\xE0i\")))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CKEditor, {\n      config: {\n        placeholder: \"Nội dung bài viết ở đây !!!\",\n        plugins: Markdown\n      },\n      editor: ClassicEditor,\n      onInit: editor => {\n        // You can store the \"editor\" and use when it is needed.\n        console.log('Editor is ready to use!', editor);\n      },\n      onChange: (event, editor) => {\n        const data = editor.getData();\n        console.log({\n          event,\n          editor,\n          data\n        });\n      },\n      onBlur: (event, editor) => {\n        console.log('Blur.', editor);\n      },\n      onFocus: (event, editor) => {\n        console.log('Focus.', editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["D:/Tai_lieu_hoc_vu/blog_me/client/src/Compoment/Post/Post.jsx"],"names":["React","Component","Card","Button","Col","Row","Form","CKEditor","ClassicEditor","GFMDataProcessor","Markdown","editor","data","processor","editing","view","document","Post","render","placeholder","plugins","console","log","event","getData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Button, Col, Row, Form } from 'react-bootstrap';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport GFMDataProcessor from '@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor';\r\n\r\nfunction Markdown(editor) {\r\n    editor.data.processor = new GFMDataProcessor(editor.editing.view.document);\r\n}\r\n\r\n\r\nclass Post extends Component {\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Form.Control type=\"text\" placeholder=\"Title\" />\r\n                        <Row className='pt-3 m-0'>\r\n                            <Col xs={11} className='p-0'>\r\n                                <Form.Control type=\"text\" placeholder=\"Tag\" />\r\n                            </Col>\r\n                            <Col xs={1} className='p-0 pl-2'>\r\n                                <Button variant=\"primary\">Đăng bài</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className='h-100'>\r\n                        <CKEditor\r\n                            config={{\r\n                                placeholder: \"Nội dung bài viết ở đây !!!\",\r\n                                plugins: Markdown,\r\n                            }}\r\n                            editor={ClassicEditor}\r\n                            onInit={editor => {\r\n                                // You can store the \"editor\" and use when it is needed.\r\n                                console.log('Editor is ready to use!', editor);\r\n                            }}\r\n                            onChange={(event, editor) => {\r\n                                const data = editor.getData();\r\n                                console.log({ event, editor, data });\r\n                            }}\r\n                            onBlur={(event, editor) => {\r\n                                console.log('Blur.', editor);\r\n                            }}\r\n                            onFocus={(event, editor) => {\r\n                                console.log('Focus.', editor);\r\n                            }}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}